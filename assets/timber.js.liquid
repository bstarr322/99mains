/* Jonathan Snook - MIT License - https://github.com/snookca/prepareTransition */
(function(a){a.fn.prepareTransition=function(){return this.each(function(){var b=a(this);b.one("TransitionEnd webkitTransitionEnd transitionend oTransitionEnd",function(){b.removeClass("is-transitioning")});var c=["transition-duration","-moz-transition-duration","-webkit-transition-duration","-o-transition-duration"];var d=0;a.each(c,function(a,c){d=parseFloat(b.css(c))||d});if(d!=0){b.addClass("is-transitioning");b[0].offsetWidth}})}})(jQuery);

/* replaceUrlParam - http://stackoverflow.com/questions/7171099/how-to-replace-url-parameter-with-javascript-jquery */
function replaceUrlParam(e,r,a){var n=new RegExp("("+r+"=).*?(&|$)"),c=e;return c=e.search(n)>=0?e.replace(n,"$1"+a+"$2"):c+(c.indexOf("?")>0?"&":"?")+r+"="+a};

/*============================================================================
  Money Format
  - Shopify.format money is defined in option_selection.js.
    If that file is not included, it is redefined here.
==============================================================================*/
if ((typeof Shopify) === 'undefined') { Shopify = {}; }
if (!Shopify.formatMoney) {
  Shopify.formatMoney = function(cents, format) {
    var value = '',
        placeholderRegex = /\{\{\s*(\w+)\s*\}\}/,
        formatString = (format || this.money_format);

    if (typeof cents == 'string') {
      cents = cents.replace('.','');
    }

    function defaultOption(opt, def) {
      return (typeof opt == 'undefined' ? def : opt);
    }

    function formatWithDelimiters(number, precision, thousands, decimal) {
      precision = defaultOption(precision, 2);
      thousands = defaultOption(thousands, ',');
      decimal   = defaultOption(decimal, '.');

      if (isNaN(number) || number == null) {
        return 0;
      }

      number = (number/100.0).toFixed(precision);

      var parts   = number.split('.'),
          dollars = parts[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1' + thousands),
          cents   = parts[1] ? (decimal + parts[1]) : '';

      return dollars + cents;
    }

    switch(formatString.match(placeholderRegex)[1]) {
      case 'amount':
        value = formatWithDelimiters(cents, 2);
        break;
      case 'amount_no_decimals':
        value = formatWithDelimiters(cents, 0);
        break;
      case 'amount_with_comma_separator':
        value = formatWithDelimiters(cents, 2, '.', ',');
        break;
      case 'amount_no_decimals_with_comma_separator':
        value = formatWithDelimiters(cents, 0, '.', ',');
        break;
    }

    return formatString.replace(placeholderRegex, value);
  };
}

// Timber functions
window.timber = window.timber || {};

timber.cacheSelectors = function () {
  timber.cache = {
    // General
    $html                    : $('html'),
    $body                    : $(document.body),

    // Navigation
    $navigation              : $('#AccessibleNav'),
    $mobileSubNavToggle      : $('.mobile-nav__toggle'),

    // Collection Pages
    $changeView              : $('.change-view'),

    // Product Page
    $productImage            : $('#ProductPhotoImg'),
    $thumbImages             : $('#ProductThumbs').find('a.product-single__thumbnail'),

    // Customer Pages
    $recoverPasswordLink     : $('#RecoverPassword'),
    $hideRecoverPasswordLink : $('#HideRecoverPasswordLink'),
    $recoverPasswordForm     : $('#RecoverPasswordForm'),
    $customerLoginForm       : $('#CustomerLoginForm'),
    $passwordResetSuccess    : $('#ResetSuccess')
  };
};

timber.init = function () {
  FastClick.attach(document.body);
  timber.cacheSelectors();
  timber.globalEvents();
  timber.accessibleNav();
  timber.drawersInit();
  timber.mobileNavToggle();
  timber.productImageSwitch();
  timber.responsiveVideos();
  timber.collectionViews();
  timber.loginForms();
  timber.megaMenu();
  timber.mobileMenu();
  timber.productPage();
  timber.salesModelsPage();
};

timber.accessibleNav = function () {
  var $nav = timber.cache.$navigation,
      $allLinks = $nav.find('a'),
      $topLevel = $nav.children('li').find('a'),
      $parents = $nav.find('.site-nav--has-dropdown'),
      $subMenuLinks = $nav.find('.site-nav__dropdown').find('a'),
      activeClass = 'nav-hover',
      focusClass = 'nav-focus';

  // Mouseenter
  $parents.on('mouseenter touchstart', function(evt) {
    var $el = $(this);

    if (!$el.hasClass(activeClass)) {
      evt.preventDefault();
    }

    showDropdown($el);
  });

  // Mouseout
  $parents.on('mouseleave', function() {
    hideDropdown($(this));
  });

  $subMenuLinks.on('touchstart', function(evt) {
    // Prevent touchstart on body from firing instead of link
    evt.stopImmediatePropagation();
  });

  $allLinks.focus(function() {
    handleFocus($(this));
  });

  $allLinks.blur(function() {
    removeFocus($topLevel);
  });

  // accessibleNav private methods
  function handleFocus ($el) {
    var $subMenu = $el.next('ul'),
        hasSubMenu = $subMenu.hasClass('sub-nav') ? true : false,
        isSubItem = $('.site-nav__dropdown').has($el).length,
        $newFocus = null;

    // Add focus class for top level items, or keep menu shown
    if (!isSubItem) {
      removeFocus($topLevel);
      addFocus($el);
    } else {
      $newFocus = $el.closest('.site-nav--has-dropdown').find('a');
      addFocus($newFocus);
    }
  }

  function showDropdown ($el) {
    $el.addClass(activeClass);

    setTimeout(function() {
      timber.cache.$body.on('touchstart', function() {
        hideDropdown($el);
      });
    }, 250);
  }

  function hideDropdown ($el) {
    $el.removeClass(activeClass);
    timber.cache.$body.off('touchstart');
  }

  function addFocus ($el) {
    $el.addClass(focusClass);
  }

  function removeFocus ($el) {
    $el.removeClass(focusClass);
  }
};

timber.globalEvents = function() {

  $(".product_images img").unveil(200);

  "use strict";

  /////////////////////////////////////
  //  animate elements when they are in viewport
  /////////////////////////////////////

  $('.noIE .animated').waypoint(function () {
    var animation = $(this).data('animation');
    $(this).addClass('animation-done').addClass(animation);
  }, {
    triggerOnce: true,
    offset: '70%'
  });


  $('[data-toggle="tooltip"]').tooltip();


  // Add smooth scrolling to all links
  $("a[data-id]").on('click', function(event) {
    event.preventDefault();
    var hash = $(this).data("id");
    $('html, body').animate({
      scrollTop: $(hash).offset().top
    }, 700, function(){
    });
  });


  var searchWatchTimer = setInterval(checkSearchResult, 100);
  function checkSearchResult() {
    if ($('.snize-ac-results').length < 1) return;
    if ($('.snize-ac-results').is(':visible')) {
      if ($('.snize-nothing-found',$('.snize-ac-results')).length < 1) {
        $('.search-module-content').hide();
      } else {
        $('.search-module-content').show();
      }
    } else {
      $('.search-module-content').show();
    }
  }

  // Initialize Swiper slider
  var swiper = new Swiper('.swiper-container', {
    pagination: '.swiper-pagination',
    paginationClickable: true,
    spaceBetween: 30,
    centeredSlides: true,
    autoplay: 5000,
    autoplayDisableOnInteraction: false
  });

  $( window ).resize(function() {
    $(".megaMenuCarousel_js").slick("refresh");
  });
  
}
timber.megaMenu = function() {

  // productCarousel($('.megaMenuCarousel_js'),1,1,1,1,1, {autoplay: true, speed: 3000 });
  productCarousel($('.megaMenuCarousel_js'),1,1,1,1,1);
  /* Multi menu position */
  var $mainMenu = $(".mainMenu");
  if($mainMenu.find('.dropdown-mega-menu').length) {
    $mainMenu.find('.dropdown-mega-menu > ul:not(.image-links-layout)').each(function(){
      $(this).find('a').each(function(){
        $(this).hover(
          function(){
            var $this = $(this);
            if($this.parent().find('ul').length) {
              var $ul = $this.parent().find('ul').first();
              var ow = $ul.innerWidth();
              var ox = $ul.offset().left;
              var s = ow + ox;
              
              var oh = $ul.innerHeight();
              var oy = $ul.offset().top;
              var sh = oh + oy;
              
              var w = window.innerWidth;
              var h = 0;
              var _par = null;
              
              if($ul.hasClass('megamenu__submenu')) {
                var _parent = false;
                if($ul.parent().parent().hasClass('megamenu')) {
                  return false;
                }
                else if($ul.parent().parent().parent().parent().hasClass('megamenu')) {
                  _par = $ul.parent().parent().parent().parent();
                  w = _par.offset().left + _par.innerWidth();
                  h = _par.offset().top + _par.innerHeight();
                  h -= sh;
                  if(h < 0) $ul.css('top', h-5);
                }
                else if($ul.parent().parent().parent().parent().parent().parent().hasClass('megamenu')) {
                  _par = $ul.parent().parent().parent().parent().parent().parent();
                  w = _par.offset().left + _par.innerWidth();
                  h = _par.offset().top + _par.innerHeight();
                  h -= sh;
                  if(h < 0) $ul.css('top', h-5);
                }
              }
              if(w < s) $ul.addClass('popup-left');
            }
          },
          function(){
          }
        )
      })
    });

    // Calc MegaMenu tab panel height
    window.megamenuCatTotalHeight = 0;
    $('.megamenu__main_cat').each(function(){
      megamenuCatTotalHeight += $(this).outerHeight();
    });
    // $('.dropdown-mega-menu.active .megamenu').css('height', megamenuCatTotalHeight + 20 + 'px');

    $mainMenu.find('.megamenu__main_cat > a').on('mouseenter', function() {

      // To prevent Slick slider's width became 0, 
      $(window).trigger('resize');
      $(".megaMenuCarousel_js").slick("refresh");

      $(this).parent().addClass('tab-opened');
      var height = $('.megamenu__main_cat.tab-opened .megamenu__submenu').outerHeight();
      if (megamenuCatTotalHeight > height) {
        // $('.dropdown-mega-menu.active .megamenu').css('height', megamenuCatTotalHeight + 20 + 'px');
      } else {
        // $('.dropdown-mega-menu.active .megamenu').css('height', height + 20 + 'px');
      }
    }).on('mouseleave', function() {
      $(this).parent().removeClass('tab-opened');
    });
  }

  var timerVar;
  $("nav").each(function(){
    if(!$( this ).hasClass("navbar-vertical")) {
      $( this ).find(".dropdown").each(function(){
        $( this ).hover(
          function() {
            var $this = $( this );
            var $obj = $this.find(".dropdown-menu");
            if($obj.length) {
              $obj.fadeOut(0);
              timerVar = setTimeout(function(){ 
                $this.addClass("active"); 
                $obj.fadeIn(200);
                submenuXposition($obj);
                submenuYposition($obj);
                $( window ).bind( "scroll", { obj: $obj }, menuScroll);

                $(".megaMenuCarousel_js").slick("refresh");

                window.megamenuOpenedCatHeight = window.megamenuOpenedCatHeight || $('.dropdown-mega-menu .megamenu__main_cat.tab-opened .megamenu__submenu').outerHeight();
                if (megamenuCatTotalHeight > window.megamenuOpenedCatHeight) {
                  // $('.dropdown-mega-menu.active .megamenu').css('height', megamenuCatTotalHeight + 20 + 'px');
                } else {
                  // $('.dropdown-mega-menu.active .megamenu').css('height',  window.megamenuOpenedCatHeight + 20 + 'px');
                }

              }, 300);

              
            }
          }, function() {
            var $this = $( this );
            var $obj = $this.find(".dropdown-menu");
            clearTimeout(timerVar);
            $( window ).unbind( "scroll", menuScroll);
            if($this.hasClass("active")){
              $obj.fadeOut(300);
              
              $('.megamenu__main_cat').removeClass('tab-opened');
              $('.megamenu__main_cat').first().addClass('tab-opened');
              window.megamenuOpenedCatHeight = $('.dropdown-mega-menu.active .megamenu__main_cat.tab-opened .megamenu__submenu').outerHeight();

              setTimeout(removeActiveItem, 300, $this);
              $( "body" ).hasClass("hidden-menu") && $( "body" ).removeClass("hidden-menu");
            }

          }
        );
      });
    }
  });


  function submenuXposition($obj){
    var w_width = window.innerWidth;
    var o_position = $obj.offset().left;
    var o_width = $obj.outerWidth();
    var delta = parseInt(w_width - o_position - o_width - 25);
    
    if(delta < 0) {
        $obj.css("left", delta);
    }
  }
  function submenuYposition($obj){
    var w_height = window.innerHeight;
    var o_position = $(".stuck-nav").hasClass("fixedbar") ? $obj.position().top : $obj.offset().top;
    var o_height = $obj.outerHeight();
    var delta = parseInt(w_height - o_position - o_height);
    if(delta < 0) {
        $obj.css({"max-height": o_height + delta - 25, "overflow": "auto"});
        $( "body" ).addClass("hidden-menu");
    }
  }
  function menuScroll(event) {
    event.data.obj.removeAttr("style");
    submenuXposition(event.data.obj);
    submenuYposition(event.data.obj)
  }

  function removeActiveItem(item){
    item.removeClass("active");
    item.removeAttr("style");
    item.find("ul").first().removeAttr("style");
  }

};

timber.mobileMenu = function() {
  if ($(".navbar-toggle").length > 0) {
    $('.navbar-toggle').click(function () {
      $(".mobile-menu-wrapper").addClass('open');
      $("body").addClass('no-scroll');       
    });  
    $('#cboxClose').click(function () {
      $('.mobile-menu-wrapper, .mobile-menu-popup').removeClass('open');
      $("body").removeClass('no-scroll')
    });
    $('.mobile-menu-popup').click(function () {
      $('.mobile-menu-wrapper').removeClass('open');
      $("body").removeClass('no-scroll')
    });         
  }

  $("#off-canvas-menu .expander-list").find("ul").hide().end().find(" .expander").text("+").end().find(".active").each(function() {
    $(this).parents("li ").each(function() {
      var $this = $(this),
          $ul = $this.find("> ul"),

          $expander = $this.find("> .name .expander");
      $ul.show();

      $expander.html("&minus;")
    })
  }).end().find(" .expander").each(function() {
    var $this = $(this),
        hide = $this.text() === "+",
        $ul = $this.parent(".name").next("ul"),
        $name = $this.next("a");
    $this.click(function() {
      if ($ul.css("display") ==
          "block") $ul.slideUp("slow");
      else $ul.slideDown("slow");
      $(this).html(hide ? "&minus;" : "+");              
      hide = !hide
    })
  })
}

timber.productPage = function() {

  $('.swatch-element > input[type=radio][data-title]').on('change', function () {
    $(this).parents('.product-form__item--swatch').find('>label p').html($(this).data('title'));
  });

  if ($(window).width() < 1025) {
    $('input[type="radio"]').on('change', function(){
      $('[data-toggle="tooltip"]').tooltip('hide');
      $('label[for="' + $(this).attr('id') + '"][data-toggle="tooltip"]').tooltip('show');
    });
  }
  
  $('.product-single__thumbnails li:first-child').addClass('is_active');
  $('.product-single__thumbnails li').click(function() {
    $('.product-single__thumbnails li').removeClass('is_active');
    $(this).addClass('is_active');
  });

  /*PRODUCT FLEXSLIDER*/
  $('#carousel').flexslider({
    animation: "slide",
    controlNav: false,
    animationLoop: false,
    slideshow: false,
    itemWidth: 80,
    itemMargin: 5,
    asNavFor: '.product_images'
  });
 
  $('.product_images').flexslider({
    touch: false,
    pauseOnHover: true,
    directionNav: true,
    animation: "fade",
    slideshow: false,
    slideshowSpeed: 10*1000
  });
   
  $('.related__product-content').flexslider({
    animation: "slide",
    animationLoop: false,
    itemWidth: 200,
    slideshow: false,
    itemMargin: 10
  });
   
    // Initialize popup as usual
  $('#image-block .slides').magnificPopup({
    delegate: 'a',
    type: 'image',
    closeOnContentClick: false,
    closeBtnInside: false,
    mainClass: 'mfp-with-zoom mfp-img-mobile',
    image: {
      verticalFit: true
    },
    gallery: {
      enabled: true
    },
    zoom: {
      enabled: true,
      duration: 300, // don't foget to change the duration also in CSS
      opener: function(element) {
        return element.find('img');
      }
    }
  });


  {% if settings.show_product_zoom %}
  /////////////////////////////////////
  //  Product Image Zoom
  /////////////////////////////////////
  if(typeof $.zoom === 'function'){
    var imageBlock = $('#image-block');
    if(imageBlock.length){
      var imageSlideLinks = imageBlock.find('a.image-slide-link');
      if(imageSlideLinks.length){
        imageSlideLinks.each(function(){
          var t = $(this);
          var url = t[0].href;
          t.zoom({ url:url,touch:false });
        });
      }
    }
  }
  {% endif %}
};

timber.salesModelsPage = function() {
  var $box = $(".sales-box");
  var $boxHeader = $('.sales-box .box-header');

  if ($boxHeader.length) {
    $boxHeader.matchHeight();
  }
  
  if ($box.length) {
    $box.matchHeight();
  }
}

timber.drawersInit = function () {
  timber.LeftDrawer = new timber.Drawers('NavDrawer', 'left');
  {% if settings.ajax_cart_method == "drawer" %}
    timber.RightDrawer = new timber.Drawers('CartDrawer', 'right', {
      'onDrawerOpen': ajaxCart.load
    });
  {% endif %}
};

timber.mobileNavToggle = function () {
  timber.cache.$mobileSubNavToggle.on('click', function() {
    $(this).parent().toggleClass('mobile-nav--expanded');
  });
};

timber.getHash = function () {
  return window.location.hash;
};

timber.productImageSwitch = function () {
  if (timber.cache.$thumbImages.length) {
    // Switch the main image with one of the thumbnails
    // Note: this does not change the variant selected, just the image
    timber.cache.$thumbImages.on('click', function(evt) {
      evt.preventDefault();
      var newImage = $(this).attr('href');
      timber.switchImage(newImage, null, timber.cache.$productImage);
    });
  }
};

timber.switchImage = function (src, imgObject, el) {
  // Make sure element is a jquery object
  var $el = $(el);
  $el.attr('src', src);
};

timber.responsiveVideos = function () {
  var $iframeVideo = $('iframe[src*="youtube.com/embed"], iframe[src*="player.vimeo"]');
  var $iframeReset = $iframeVideo.add('iframe#admin_bar_iframe');

  $iframeVideo.each(function () {
    // Add wrapper to make video responsive
    $(this).wrap('<div class="video-wrapper"></div>');
  });

  $iframeReset.each(function () {
    // Re-set the src attribute on each iframe after page load
    // for Chrome's "incorrect iFrame content on 'back'" bug.
    // https://code.google.com/p/chromium/issues/detail?id=395791
    // Need to specifically target video and admin bar
    this.src = this.src;
  });
};

timber.collectionViews = function () {
  if (timber.cache.$changeView.length) {
    timber.cache.$changeView.on('click', function() {
      var view = $(this).data('view'),
          url = document.URL,
          hasParams = url.indexOf('?') > -1;

      if (hasParams) {
        window.location = replaceUrlParam(url, 'view', view);
      } else {
        window.location = url + '?view=' + view;
      }
    });
  }
};

timber.loginForms = function() {
  function showRecoverPasswordForm() {
    timber.cache.$recoverPasswordForm.show();
    timber.cache.$customerLoginForm.hide();
  }

  function hideRecoverPasswordForm() {
    timber.cache.$recoverPasswordForm.hide();
    timber.cache.$customerLoginForm.show();
  }

  timber.cache.$recoverPasswordLink.on('click', function(evt) {
    evt.preventDefault();
    showRecoverPasswordForm();
  });

  timber.cache.$hideRecoverPasswordLink.on('click', function(evt) {
    evt.preventDefault();
    hideRecoverPasswordForm();
  });

  // Allow deep linking to recover password form
  if (timber.getHash() == '#recover') {
    showRecoverPasswordForm();
  }
};

timber.resetPasswordSuccess = function() {
  timber.cache.$passwordResetSuccess.show();
};

/*============================================================================
  Drawer modules
  - Docs http://shopify.github.io/Timber/#drawers
==============================================================================*/
timber.Drawers = (function () {
  var Drawer = function (id, position, options) {
    var defaults = {
      close: '.js-drawer-close',
      open: '.js-drawer-open-' + position,
      openClass: 'js-drawer-open',
      dirOpenClass: 'js-drawer-open-' + position
    };

    this.$nodes = {
      parent: $('body, html'),
      page: $('#PageContainer'),
      moved: $('.is-moved-by-drawer')
    };

    this.config = $.extend(defaults, options);
    this.position = position;

    this.$drawer = $('#' + id);

    if (!this.$drawer.length) {
      return false;
    }

    this.drawerIsOpen = false;
    this.init();
  };

  Drawer.prototype.init = function () {
    $(this.config.open).on('click', $.proxy(this.open, this));
    this.$drawer.find(this.config.close).on('click', $.proxy(this.close, this));
  };

  Drawer.prototype.open = function (evt) {
    // Keep track if drawer was opened from a click, or called by another function
    var externalCall = false;

    // Prevent following href if link is clicked
    if (evt) {
      evt.preventDefault();
    } else {
      externalCall = true;
    }

    // Without this, the drawer opens, the click event bubbles up to $nodes.page
    // which closes the drawer.
    if (evt && evt.stopPropagation) {
      evt.stopPropagation();
      // save the source of the click, we'll focus to this on close
      this.$activeSource = $(evt.currentTarget);
    }

    if (this.drawerIsOpen && !externalCall) {
      return this.close();
    }

    // Notify the drawer is going to open
    timber.cache.$body.trigger('beforeDrawerOpen.timber', this);

    // Add is-transitioning class to moved elements on open so drawer can have
    // transition for close animation
    this.$nodes.moved.addClass('is-transitioning');
    this.$drawer.prepareTransition();

    this.$nodes.parent.addClass(this.config.openClass + ' ' + this.config.dirOpenClass);
    this.drawerIsOpen = true;

    // Set focus on drawer
    this.trapFocus(this.$drawer, 'drawer_focus');

    // Run function when draw opens if set
    if (this.config.onDrawerOpen && typeof(this.config.onDrawerOpen) == 'function') {
      if (!externalCall) {
        this.config.onDrawerOpen();
      }
    }

    if (this.$activeSource && this.$activeSource.attr('aria-expanded')) {
      this.$activeSource.attr('aria-expanded', 'true');
    }

    // Lock scrolling on mobile
    this.$nodes.page.on('touchmove.drawer', function () {
      return false;
    });

    this.$nodes.page.on('click.drawer', $.proxy(function () {
      this.close();
      return false;
    }, this));

    // Notify the drawer has opened
    timber.cache.$body.trigger('afterDrawerOpen.timber', this);
  };

  Drawer.prototype.close = function () {
    if (!this.drawerIsOpen) { // don't close a closed drawer
      return;
    }

    // Notify the drawer is going to close
    timber.cache.$body.trigger('beforeDrawerClose.timber', this);

    // deselect any focused form elements
    $(document.activeElement).trigger('blur');

    // Ensure closing transition is applied to moved elements, like the nav
    this.$nodes.moved.prepareTransition({ disableExisting: true });
    this.$drawer.prepareTransition({ disableExisting: true });

    this.$nodes.parent.removeClass(this.config.dirOpenClass + ' ' + this.config.openClass);

    this.drawerIsOpen = false;

    // Remove focus on drawer
    this.removeTrapFocus(this.$drawer, 'drawer_focus');

    this.$nodes.page.off('.drawer');

    // Notify the drawer is closed now
    timber.cache.$body.trigger('afterDrawerClose.timber', this);
  };

  Drawer.prototype.trapFocus = function ($container, eventNamespace) {
    var eventName = eventNamespace ? 'focusin.' + eventNamespace : 'focusin';

    $container.attr('tabindex', '-1');

    $container.focus();

    $(document).on(eventName, function (evt) {
      if ($container[0] !== evt.target && !$container.has(evt.target).length) {
        $container.focus();
      }
    });
  };

  Drawer.prototype.removeTrapFocus = function ($container, eventNamespace) {
    var eventName = eventNamespace ? 'focusin.' + eventNamespace : 'focusin';

    $container.removeAttr('tabindex');
    $(document).off(eventName);
  };

  return Drawer;
})();

  
  // Product Carousel
  function productCarousel(carousel,numberXl,numberLg,numberMd,numberSm,numberXs, autoplay) {
     
    var windowW = window.innerWidth || $(window).width();

    var slidesToShowXl = (numberXl > 0) ? numberXl : 6;
    var slidesToShowLg = (numberLg > 0) ? numberLg : 4;
    var slidesToShowMd = (numberMd > 0) ? numberMd : numberLg;
    var slidesToShowSm = (numberSm > 0) ? numberSm : numberMd;
    var slidesToShowXs = (numberXs > 0) ? numberXs : 1;

    autoplay = autoplay || {autoplay: false, speed: 5000, slidesToScroll: slidesToShowXl};

    if (carousel.parent().find('.carousel-products__button').length > 0) {
      carousel.slick({
        prevArrow: carousel.parent().find('.carousel-products__button .btn-prev'),
        nextArrow: carousel.parent().find('.carousel-products__button .btn-next'),
        autoplay: autoplay.autoplay,
        autoplaySpeed: autoplay.speed,
        dots: true,
        slidesToShow: slidesToShowXl,
        slidesToScroll: autoplay.slidesToScroll,
        responsive: [{
          breakpoint: 1770,
          settings: {
            slidesToShow: slidesToShowLg,
            slidesToScroll: Math.min(autoplay.slidesToScroll, slidesToShowLg)
          }
        },{
          breakpoint: 992,
          settings: {
            slidesToShow: slidesToShowMd,
            slidesToScroll: Math.min(autoplay.slidesToScroll, slidesToShowMd)
          }
        }, {
          breakpoint: 768,
          settings: {
            slidesToShow: slidesToShowSm,
            slidesToScroll: Math.min(autoplay.slidesToScroll, slidesToShowSm)
          }
        }, {
          breakpoint: 480,
          settings: {
            slidesToShow: slidesToShowXs,
            slidesToScroll: Math.min(autoplay.slidesToScroll, slidesToShowXs)
          }
        }]
      });
    }
    else {
      carousel.slick({
        slidesToShow: slidesToShowXl,
        autoplay: autoplay.autoplay,
        slidesToScroll: autoplay.slidesToScroll,
        autoplaySpeed: autoplay.speed,
        speed: 500,
        nextArrow: '<i class="slick-next fa fa-angle-right"></i>',
        prevArrow: '<i class="slick-prev fa fa-angle-left"></i>',
        responsive: [{
          breakpoint: 1770,
          settings: {
            slidesToShow: slidesToShowLg,
            slidesToScroll: Math.min(autoplay.slidesToScroll, slidesToShowLg)
          }
        },{
          breakpoint: 992,
          settings: {
            slidesToShow: slidesToShowMd,
            slidesToScroll: Math.min(autoplay.slidesToScroll, slidesToShowMd)
          }
        }, {
          breakpoint: 768,
          settings: {
            slidesToShow: slidesToShowSm,
            slidesToScroll: Math.min(autoplay.slidesToScroll, slidesToShowSm)
          }
        }, {
          breakpoint: 480,
          settings: {
            slidesToShow: slidesToShowXs,
            slidesToScroll: Math.min(autoplay.slidesToScroll, slidesToShowXs)
          }
        }]
      });
    }

    fixCarouselHover(carousel);
  };

  // Fix z-index problem on carousel hover
  
  function fixCarouselHover(carousel) {
    carousel.find('.slick-slide').bind( "mouseenter mouseleave",
      function( event ){
        $(this).closest('.slick-slider').toggleClass('hover');
      }
    );      
  };

// Initialize Timber's JS on docready
$(timber.init);
<!-- /templates/collection.list.liquid -->
{% comment %}

  By using a variation of the 'view all' parameter technique, you can create
  a custom layout for any template by adding ?view=xxxx

  In this example, you can have a list view of your collection page by going to
  /collections/all?view=list

  For more information on collection tags:
    - http://docs.shopify.com/themes/liquid-variables/collection

  For more information on the ?view parameter:
    - http://docs.shopify.com/support/configuration/store-customization/can-i-show-more-than-50-products-on-my-homepage-can-i-add-a-view-all-function-to-my-collection-pages#add-view-all

{% endcomment %}

<div id="collection__items" class="{% if collection.template_suffix contains 'shop2' %}template-shop2{% endif %}">
{% paginate collection.products by settings.products_per_page %}

{% unless collection.template_suffix contains 'shop2' %}

<div class="collection__header-banner">
   {% assign header_banner = collection.description | split: "<!-- Header Image -->" | last | split: "<!-- /Header Image -->" | first %}
  {{ header_banner }}
</div>

{% unless collection.template_suffix contains 'department' or collection.template_suffix contains 'deals' %}
<nav class="collection__nav-bar">
  <div class="wrapper">
    <ul class="collection__nav-list">
      <li><a data-id="#collection__products">Items<span>({{ collection.products_count }})</span></a></li>
      <li><a data-id="#collection__about">About</a></li>
<!--       <li><a data-id="#collection__reviews">Reviews</a></li> -->
      <li><a data-id="#collection__policies">Policies</a></li>
    </ul>
  </div>
</nav>

{% endunless %}
<div class="collection-breadcrumb">
  <div class="wrapper">
    {% include 'breadcrumb' %}
  </div>
</div>

{% else %}
  {{ collection.description }}
{% endunless %}


{% comment %}
  Use .grid--rev so that the collection tags appear below the products on mobile
{% endcomment %}
<div id="collection__products">
  <div class="wrapper collection__items-wrapper">
    
    {% unless collection.template_suffix contains 'shop2' %}
    <div class="collection__filter-wrapper">
      <div class="collection__filter-content">
        {% include 'filter-menu' %}
      </div>
    </div>
    {% endunless %}
    
    <div class="collection__items-grid">
      {% comment %}
        Different markup if a collection description exists
      {% endcomment %}
      <header class="section-header">
        <h1 class="section-header__title section-header__left">{{ collection.title }}</h1>
        <div class="section-header__right">
          {% include 'collection-sorting' %}
        </div>
      </header>

      {% comment %}
        Use class grid-uniform to have evenly sized columns clear
        each other properly at each breakpoint.
      {% endcomment %}
      <div class="product__items-grid clearfix">

        <!-- begin product list output -->
        {% for product in collection.products %}

          {% comment %}
            Check if the product is on sale and set a variable to be used below.
          {% endcomment %}
          {% assign on_sale = false %}
          {% if product.compare_at_price > product.price %}
            {% assign on_sale = true %}
          {% endif %}

          {% comment %}
            Check if the product is sold out and set a variable to be used below.
          {% endcomment %}
          {% assign sold_out = true %}
          {% if product.available %}
            {% assign sold_out = false %}
          {% endif %}

          <div class="grid__item">

            {% comment %}
              Link to your product with the 'within: collection' filter for the link to be aware of the collection.
              This allows you to create collection-based navigation on the product page.

              Results of using 'within: collection':
              - Instead of a URL with /products/product-handle
                you would get /collections/collection-handle/products/product-handle

              For more info on navigation within a collection
                - http://docs.shopify.com/support/your-store/collections/how-to-navigate-within-a-collection
            {% endcomment %}
            <div class="grid large--display-table">
              <div class="grid__item large--one-fifth large--display-table-cell medium--one-third">
                <a href="{{ product.url | within: collection }}">
                  <img src="{{ product.featured_image.src | img_url: 'medium' }}" alt="{{ product.featured_image.alt | escape }}" class="grid__image">
                </a>
              </div>
              <div class="grid__item large--four-fifths large--display-table-cell medium--two-thirds">
                <div class="grid">
                  <div class="grid__item large--three-quarters medium--two-thirds">
                    <p class="collection__list-product-title">{{ product.title }}</p>
                    <div class="rte collection__list-product-description">
                      <p>{{ product.content | strip_html | truncatewords: 30 }}</p>
                    </div>
                  </div>
                  <div class="grid__item large--one-quarter medium--one-third collection__list-product-price">
                    {% comment %}
                      You can show a leading 'from' or 'up to' by checking 'product.price_varies'
                      if your variants have different prices.
                    {% endcomment %}
                    {% if on_sale %}
                      {% if product.price_varies %}
                        {% assign sale_price = product.price | money %}
                        {{ 'products.product.on_sale_from_html' | t: price: sale_price }}
                      {% else %}
                        <strong>{{ 'products.product.on_sale' | t }}</strong>
                        {{ product.price | money }}
                      {% endif %}
                    {% else %}
                      {% if product.price_varies %}
                        {% assign price = product.price | money %}
                        {{ 'products.general.from_text_html' | t: price: price }}
                      {% else %}
                        {{ product.price | money }}
                      {% endif %}
                    {% endif %}
                    {% if sold_out %}
                      <br><strong>{{ 'products.product.sold_out' | t }}</strong>
                    {% endif %}
                    {% if on_sale %}
                      <br><span class="visually-hidden">{{ 'products.general.regular_price' | t }}</span><s>{{ product.compare_at_price | money }}</s>
                    {% endif %}
                  </div>
                </div>
              </div>
            </div>
          </div>

        {% else %}

          <div class="grid__item">
            <p>{{ 'collections.general.no_matches' | t }}</p>
          </div>

        {% endfor %}
        <!-- //product list output -->

      </div>

      {% if paginate.pages > 1 %}
        <div class="pagination">
          {{ paginate | default_pagination | replace: '&laquo; Previous', '&larr;' | replace: 'Next &raquo;', '&rarr;' }}
        </div>
      {% endif %}
    </div>
  </div>
</div>

{% endpaginate %}

{% unless collection.template_suffix contains 'department' or collection.template_suffix contains 'deals' %}
<div id="collection__about">
  <div class="wrapper">
    <div class="collection__about-wrapper">
      <div class="collection__about-content">
        <h3>About</h3>
      </div>
      <div class="collection__about-title">
        <p>"Shop our Marysville Michigan collection - the beautiful city of Marysville is
located in southeastern Michigan or Michigan’s “Thumb”,situated along the St. Clair River and is 7.3 square miles in size."</p>
      </div>
    </div>
  </div>
</div>

<!-- <div id="collection__reviews">
  <div class="wrapper">
    <div class="collection__reviews-wrapper">
      <div class="collection__reviews-title">
        <h3>Reviews</h3>
      </div>
      <div class="collection__reviews-content">
        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>
      </div>
    </div>
  </div>
</div> -->

<div id="collection__policies">
  <div class="wrapper">
    <div class="collection__policies-wrapper">
      <div class="collection__policies-title">
        <h3>Policies</h3>
      </div>
      <div class="collection__policies-content">
        {% unless shop.enabled_payment_types == empty %}
          {% assign payment_icons_available = 'amazon_payments,american_express,bitcoin,cirrus,dankort,diners_club,discover,dogecoin,dwolla,forbrugsforeningen,interac,jcb,litecoin,maestro,master,paypal,visa' | split: ',' %}
          <strong>Accepted Payment Methods</strong>
          <ul class="inline-list payment-icons">
            {% for type in shop.enabled_payment_types %}
              {% if payment_icons_available contains type %}
                <li>
                  <span class="icon-fallback-text">
                    <span class="icon icon-{{type}}" aria-hidden="true"></span>
                    <span class="fallback-text">{{ type | replace: '_',' '}}</span>
                  </span>
                </li>
              {% endif %}
            {% endfor %}
          </ul>
        {% endunless %}
      <strong>Returns</strong>
      <p>
        You may return most new, unopened items within 30 days of delivery for a full refund. We'll also pay the return shipping costs if the return is a result of our error (you received an incorrect or defective item, etc.).<br><br>
        You should expect to receive your refund within four weeks of giving your package to the return shipper, however, in many cases you will receive a refund more quickly. This time period includes the transit time for us to receive your return from the shipper (5 to 10 business days), the time it takes us to process your return once we receive it (3 to 5 business days), and the time it takes your bank to process our refund request (5 to 10 business days).<br><br>
        If you need to return an item, please contact us with your order number and details about the product you would like to return. We will respond quickly with instructions for how to return items from your order.
      </p>
      </div>
    </div>
  </div>
</div>
{% endunless %}

</div>